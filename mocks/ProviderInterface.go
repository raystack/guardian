// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/odpf/guardian/domain"
	mock "github.com/stretchr/testify/mock"
)

// ProviderInterface is an autogenerated mock type for the ProviderInterface type
type ProviderInterface struct {
	mock.Mock
}

// CreateConfig provides a mock function with given fields: _a0
func (_m *ProviderInterface) CreateConfig(_a0 *domain.ProviderConfig) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.ProviderConfig) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetResources provides a mock function with given fields: pc
func (_m *ProviderInterface) GetResources(pc *domain.ProviderConfig) ([]*domain.Resource, error) {
	ret := _m.Called(pc)

	var r0 []*domain.Resource
	if rf, ok := ret.Get(0).(func(*domain.ProviderConfig) []*domain.Resource); ok {
		r0 = rf(pc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.Resource)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.ProviderConfig) error); ok {
		r1 = rf(pc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRoles provides a mock function with given fields: pc, resourceType
func (_m *ProviderInterface) GetRoles(pc *domain.ProviderConfig, resourceType string) ([]*domain.Role, error) {
	ret := _m.Called(pc, resourceType)

	var r0 []*domain.Role
	if rf, ok := ret.Get(0).(func(*domain.ProviderConfig, string) []*domain.Role); ok {
		r0 = rf(pc, resourceType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.Role)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.ProviderConfig, string) error); ok {
		r1 = rf(pc, resourceType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetType provides a mock function with given fields:
func (_m *ProviderInterface) GetType() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GrantAccess provides a mock function with given fields: _a0, _a1
func (_m *ProviderInterface) GrantAccess(_a0 *domain.ProviderConfig, _a1 *domain.Appeal) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.ProviderConfig, *domain.Appeal) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RevokeAccess provides a mock function with given fields: _a0, _a1
func (_m *ProviderInterface) RevokeAccess(_a0 *domain.ProviderConfig, _a1 *domain.Appeal) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.ProviderConfig, *domain.Appeal) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
