// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	idtoken "google.golang.org/api/idtoken"

	mock "github.com/stretchr/testify/mock"
)

// IdTokenValidator is an autogenerated mock type for the Validator type
type IdTokenValidator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: ctx, token, audience
func (_m *IdTokenValidator) Validate(ctx context.Context, token string, audience string) (*idtoken.Payload, error) {
	ret := _m.Called(ctx, token, audience)

	var r0 *idtoken.Payload
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *idtoken.Payload); ok {
		r0 = rf(ctx, token, audience)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*idtoken.Payload)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, token, audience)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIdTokenValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewIdTokenValidator creates a new instance of IdTokenValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIdTokenValidator(t mockConstructorTestingTNewIdTokenValidator) *IdTokenValidator {
	mock := &IdTokenValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
