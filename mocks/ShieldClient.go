// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	shield "github.com/raystack/guardian/plugins/providers/shield"
	mock "github.com/stretchr/testify/mock"
)

// ShieldClient is an autogenerated mock type for the ShieldClient type
type ShieldClient struct {
	mock.Mock
}

// GetTeam provides a mock function with given fields:
func (_m *ShieldClient) GetTeams() ([]*shield.Team, error) {
	ret := _m.Called()

	var r0 []*shield.Team
	if rf, ok := ret.Get(0).(func() []*shield.Team); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*shield.Team)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProjects provides a mock function with given fields:
func (_m *ShieldClient) GetProjects() ([]*shield.Project, error) {
	ret := _m.Called()

	var r0 []*shield.Project
	if rf, ok := ret.Get(0).(func() []*shield.Project); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*shield.Project)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizations provides a mock function with given fields:
func (_m *ShieldClient) GetOrganizations() ([]*shield.Organization, error) {
	ret := _m.Called()

	var r0 []*shield.Organization
	if rf, ok := ret.Get(0).(func() []*shield.Organization); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*shield.Organization)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GrantTeamAccess provides a mock function with given fields: resource, user, role
func (_m *ShieldClient) GrantTeamAccess(resource *shield.Team, user string, role string) error {
	ret := _m.Called(resource, user, role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*shield.Team, string, string) error); ok {
		r0 = rf(resource, user, role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GrantProjectAccess provides a mock function with given fields: resource, user, role, groups
func (_m *ShieldClient) GrantProjectAccess(resource *shield.Project, user string, role string) error {
	ret := _m.Called(resource, user, role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*shield.Project, string, string) error); ok {
		r0 = rf(resource, user, role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GrantOrganizationAccess provides a mock function with given fields: groupID, email
func (_m *ShieldClient) GrantOrganizationAccess(resource *shield.Organization, user string, role string) error {
	ret := _m.Called(resource, user, role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*shield.Organization, string, string) error); ok {
		r0 = rf(resource, user, role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RevokeTeamAccess provides a mock function with given fields: resource, user, role
func (_m *ShieldClient) RevokeTeamAccess(resource *shield.Team, user string, role string) error {
	ret := _m.Called(resource, user, role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*shield.Team, string, string) error); ok {
		r0 = rf(resource, user, role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RevokeProjectAccess provides a mock function with given fields: resource, user, role
func (_m *ShieldClient) RevokeProjectAccess(resource *shield.Project, user string, role string) error {
	ret := _m.Called(resource, user, role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*shield.Project, string, string) error); ok {
		r0 = rf(resource, user, role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RevokeOrganizationAccess provides a mock function with given fields: resource, user, role
func (_m *ShieldClient) RevokeOrganizationAccess(resource *shield.Organization, user string, role string) error {
	ret := _m.Called(resource, user, role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*shield.Organization, string, string) error); ok {
		r0 = rf(resource, user, role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSelfUser a mock function with given fields:
func (_m *ShieldClient) GetSelfUser(email string) (*shield.User, error) {
	ret := _m.Called(email)

	var r0 *shield.User
	if rf, ok := ret.Get(0).(func(string) *shield.User); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(*shield.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
