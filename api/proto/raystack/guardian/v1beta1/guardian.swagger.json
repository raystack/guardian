{
  "swagger": "2.0",
  "info": {
    "title": "Guardian APIs",
    "version": "0.1.0"
  },
  "tags": [
    {
      "name": "GuardianService"
    }
  ],
  "host": "127.0.0.1:7400",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/activities": {
      "get": {
        "summary": "List Activities",
        "description": "List Activities returns a list of activities",
        "operationId": "GuardianService_ListActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListActivitiesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "providerIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestampGte",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timestampLte",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Activities"
        ]
      }
    },
    "/v1beta1/activities/import": {
      "post": {
        "summary": "Import Activities",
        "operationId": "GuardianService_ImportActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ImportActivitiesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ImportActivitiesRequest"
            }
          }
        ],
        "tags": [
          "Activities"
        ]
      }
    },
    "/v1beta1/activities/{id}": {
      "get": {
        "summary": "Get Activity",
        "description": "Get Activity returns an activity by ID",
        "operationId": "GuardianService_GetActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetActivityResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Activities"
        ]
      }
    },
    "/v1beta1/appeals": {
      "get": {
        "summary": "List Appeals",
        "description": "List Appeals returns a list of appeals",
        "operationId": "GuardianService_ListAppeals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListAppealsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "providerTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "providerUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appeals"
        ]
      },
      "post": {
        "summary": "Create Appeal",
        "description": "Create Appeal allows a user to create an access request to resources along with the role",
        "operationId": "GuardianService_CreateAppeal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateAppealResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1CreateAppealRequest"
            }
          }
        ],
        "tags": [
          "Appeals"
        ]
      }
    },
    "/v1beta1/appeals/{appealId}/approvals/{approvalId}/approvers": {
      "post": {
        "summary": "Add Approver",
        "description": "Add Approver adds an approver email to an appeal approval step",
        "operationId": "GuardianService_AddApprover",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AddApproverResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appealId",
            "description": "UUID of the appeal",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalId",
            "description": "Unique identifier or name of the approval",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1AddApproverRequest"
            }
          }
        ],
        "tags": [
          "Approvals"
        ]
      }
    },
    "/v1beta1/appeals/{appealId}/approvals/{approvalId}/approvers/{email}": {
      "delete": {
        "summary": "Delete Approver",
        "description": "Delete Approver deletes an approver from an approval",
        "operationId": "GuardianService_DeleteApprover",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteApproverResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appealId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Approvals"
        ]
      }
    },
    "/v1beta1/appeals/{id}": {
      "get": {
        "summary": "Get Appeal",
        "description": "Get Appeal returns an appeal by ID",
        "operationId": "GuardianService_GetAppeal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAppealResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Appeals"
        ]
      }
    },
    "/v1beta1/appeals/{id}/approvals/{approvalName}": {
      "post": {
        "summary": "Update Approval",
        "description": "Update Approval is used to approve or reject a user appeal",
        "operationId": "GuardianService_UpdateApproval",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateApprovalResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalName",
            "description": "Name of the approval step",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateApprovalRequestAction"
            }
          }
        ],
        "tags": [
          "Approvals"
        ]
      }
    },
    "/v1beta1/appeals/{id}/cancel": {
      "put": {
        "summary": "Cancel Appeal",
        "description": "Cancel Appeal cancels an appeal",
        "operationId": "GuardianService_CancelAppeal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CancelAppealResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Appeals"
        ]
      }
    },
    "/v1beta1/approvals": {
      "get": {
        "summary": "List Approvals",
        "description": "List Approvals returns a list of approvals",
        "operationId": "GuardianService_ListApprovals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListApprovalsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "appealStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Approvals"
        ]
      }
    },
    "/v1beta1/grants": {
      "get": {
        "summary": "List Grants",
        "description": "List Grants returns a list of grants",
        "operationId": "GuardianService_ListGrants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListGrantsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "providerTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "providerUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "roles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1beta1/grants/import": {
      "post": {
        "summary": "Import Grants From Provider",
        "operationId": "GuardianService_ImportGrantsFromProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ImportGrantsFromProviderResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ImportGrantsFromProviderRequest"
            }
          }
        ],
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1beta1/grants/revoke": {
      "put": {
        "summary": "Revoke Grants",
        "description": "Revoke Grants revokes a list of grants",
        "operationId": "GuardianService_RevokeGrants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RevokeGrantsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1RevokeGrantsRequest"
            }
          }
        ],
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1beta1/grants/{id}": {
      "get": {
        "summary": "Get Grant",
        "description": "Get Grant returns a grant by ID",
        "operationId": "GuardianService_GetGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetGrantResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Grants"
        ]
      },
      "patch": {
        "summary": "Update Grant",
        "description": "Update Grant updates a grant",
        "operationId": "GuardianService_UpdateGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateGrantResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateGrantRequest"
            }
          }
        ],
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1beta1/grants/{id}/revoke": {
      "put": {
        "summary": "Revoke Grant",
        "description": "Revoke Grant revokes a grant",
        "operationId": "GuardianService_RevokeGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RevokeGrantResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1RevokeGrantRequest"
            }
          }
        ],
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1beta1/me/appeals": {
      "get": {
        "summary": "List User Appeals",
        "description": "List User Appeals returns a list of appeals created by the user",
        "operationId": "GuardianService_ListUserAppeals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListUserAppealsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "providerTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "providerUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appeals"
        ]
      }
    },
    "/v1beta1/me/approvals": {
      "get": {
        "summary": "List User Approvals",
        "description": "List User Approvals returns a list of approvals created by the current user",
        "operationId": "GuardianService_ListUserApprovals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListUserApprovalsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statuses",
            "description": "List of approval statuses to filter by. Possible values are \"pending\", \"active\", \"rejected\", \"cancelled\", \"terminated\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "description": "Account ID of the user or service account who is creating the appeal",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "appealStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Approvals"
        ]
      }
    },
    "/v1beta1/me/grants": {
      "get": {
        "summary": "List User Grants",
        "description": "List User Grants returns a list of grants created by the user",
        "operationId": "GuardianService_ListUserGrants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListUserGrantsResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "providerTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "providerUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceUrns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "roles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1beta1/namespaces": {
      "get": {
        "summary": "List Namespaces",
        "operationId": "GuardianService_ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListNamespacesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Namespaces"
        ]
      },
      "post": {
        "summary": "Create Namespace",
        "operationId": "GuardianService_CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateNamespaceResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1CreateNamespaceRequest"
            }
          }
        ],
        "tags": [
          "Namespaces"
        ]
      }
    },
    "/v1beta1/namespaces/{id}": {
      "get": {
        "summary": "Get Namespace",
        "operationId": "GuardianService_GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetNamespaceResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Namespaces"
        ]
      },
      "put": {
        "summary": "Update Namespace",
        "operationId": "GuardianService_UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateNamespaceResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateNamespaceRequest"
            }
          }
        ],
        "tags": [
          "Namespaces"
        ]
      }
    },
    "/v1beta1/policies": {
      "get": {
        "summary": "List Policies",
        "description": "List Policies returns a list of policies",
        "operationId": "GuardianService_ListPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListPoliciesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Policies"
        ]
      },
      "post": {
        "summary": "Create Policy",
        "description": "Create Policy creates a new policy in Guardian",
        "operationId": "GuardianService_CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreatePolicyResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1Policy"
            }
          },
          {
            "name": "dryRun",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Policies"
        ]
      }
    },
    "/v1beta1/policies/{id}": {
      "put": {
        "summary": "Update Policy",
        "description": "Update Policy updates a policy in Guardian",
        "operationId": "GuardianService_UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdatePolicyResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1Policy"
            }
          },
          {
            "name": "dryRun",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Policies"
        ]
      }
    },
    "/v1beta1/policies/{id}/versions/{version}": {
      "get": {
        "summary": "Get Policy",
        "description": "Get Policy returns a policy by ID and version",
        "operationId": "GuardianService_GetPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetPolicyResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Policies"
        ]
      }
    },
    "/v1beta1/policies/{id}/versions/{version}/preferences": {
      "get": {
        "summary": "Get Policy Preferences",
        "description": "Get Policy Preferences returns a policy preferences by ID and version",
        "operationId": "GuardianService_GetPolicyPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetPolicyPreferencesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Policies"
        ]
      }
    },
    "/v1beta1/providers": {
      "get": {
        "summary": "List Providers",
        "description": "List Providers returns a list of providers supported by Guardian",
        "operationId": "GuardianService_ListProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProvidersResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urn",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Providers"
        ]
      },
      "post": {
        "summary": "Create Provider",
        "description": "Create Provider registers a new provider in Guardian. Once a provider config is registered, Guardian will immediately fetch the resources and store it in the database.",
        "operationId": "GuardianService_CreateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateProviderResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ProviderConfig"
            }
          },
          {
            "name": "dryRun",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1beta1/providers/types": {
      "get": {
        "summary": "Get Provider Types",
        "description": "Get Provider Types returns a list of provider types supported by Guardian",
        "operationId": "GuardianService_GetProviderTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetProviderTypesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1beta1/providers/{config.type}/{config.urn}": {
      "put": {
        "summary": "Update Provider",
        "description": "Update Provider updates a provider config in Guardian",
        "operationId": "GuardianService_UpdateProvider2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateProviderResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.type",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "config.urn",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ProviderConfig"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dryRun",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1beta1/providers/{id}": {
      "get": {
        "summary": "Get Provider",
        "description": "Get Provider returns a provider by ID",
        "operationId": "GuardianService_GetProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetProviderResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Providers"
        ]
      },
      "delete": {
        "summary": "Delete Provider",
        "description": "Delete Provider deletes a provider regsitered in Guardian database",
        "operationId": "GuardianService_DeleteProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteProviderResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Providers"
        ]
      },
      "put": {
        "summary": "Update Provider",
        "description": "Update Provider updates a provider config in Guardian",
        "operationId": "GuardianService_UpdateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateProviderResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ProviderConfig"
            }
          },
          {
            "name": "dryRun",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1beta1/providers/{id}/resources/{resourceType}/roles": {
      "get": {
        "summary": "List Roles",
        "description": "List Roles returns a list of roles supported by a provider for a particular resource type.",
        "operationId": "GuardianService_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListRolesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1beta1/resources": {
      "get": {
        "summary": "List Resources",
        "description": "List Resources returns a list of resources",
        "operationId": "GuardianService_ListResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListResourcesResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "isDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "providerType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "providerUrn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Resources"
        ]
      }
    },
    "/v1beta1/resources/{id}": {
      "get": {
        "summary": "Get Resource",
        "description": "Get Resource returns a resource by ID",
        "operationId": "GuardianService_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetResourceResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resources"
        ]
      },
      "delete": {
        "summary": "Delete Resource",
        "description": "Delete Resource deletes a resource in Guardian",
        "operationId": "GuardianService_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteResourceResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resources"
        ]
      },
      "put": {
        "summary": "Update Resource",
        "description": "Update Resource updates a resource in Guardian",
        "operationId": "GuardianService_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateResourceResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request was malformed or contained invalid parameters.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to access the resource",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "404": {
            "description": "Not Found - The requested resource was not found",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "Internal Server Error. Returned when theres is something wrong with Frontier server.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/guardianv1beta1Resource"
            }
          }
        ],
        "tags": [
          "Resources"
        ]
      }
    }
  },
  "definitions": {
    "AdditionalAppealResourceIdentifier": {
      "type": "object",
      "properties": {
        "providerType": {
          "type": "string"
        },
        "providerUrn": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "urn": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ConditionMatchCondition": {
      "type": "object",
      "properties": {
        "eq": {
          "type": "object"
        }
      }
    },
    "PolicyAppealConfigDurationOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the duration option",
          "required": [
            "name"
          ]
        },
        "value": {
          "type": "string",
          "description": "Actual value of duration such as 24h, 72h. value will be 0h in case of permanent duration. Valid time units are ns, us (or µs). Reference: [ParseDuration](https://pkg.go.dev/time#ParseDuration)",
          "required": [
            "value"
          ]
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "PolicyAppealConfigQuestion": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique key of the question",
          "required": [
            "key"
          ]
        },
        "question": {
          "type": "string",
          "description": "Question to be asked to the appeal creator",
          "required": [
            "question"
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Whether the question is required or not",
          "required": [
            "required"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description to be shown to the appeal creator"
        }
      },
      "required": [
        "key",
        "question",
        "required"
      ]
    },
    "PolicyApprovalStep": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Step 1",
          "description": "Approval step identifier",
          "required": [
            "name"
          ]
        },
        "description": {
          "type": "string",
          "example": "Step 1 description",
          "description": "Approval step description"
        },
        "allowFailed": {
          "type": "boolean",
          "example": true,
          "description": "If set true, and current step is rejected, it will mark the appeal status as skipped instead of rejected"
        },
        "when": {
          "type": "string",
          "description": "Determines whether the step should be evaluated or it can be skipped. If it evaluates to be falsy, the step will automatically skipped. Otherwise, step become pending/blocked (normal)."
        },
        "strategy": {
          "type": "string",
          "example": "auto",
          "description": "Execution behaviour of the step. Possible values are `auto` or `manual`",
          "required": [
            "strategy"
          ]
        },
        "approveIf": {
          "type": "string",
          "description": "Determines the automatic resolution of current step when strategy is `auto`. Required when strategy is `auto`"
        },
        "approvers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email or Expression string. The Expression is expected to return an email address or list of email addresses. Required when strategy is `manual`"
        },
        "rejectionReason": {
          "type": "string",
          "description": "This fills `Approval.Reason` if current approval step gets rejected based on `ApproveIf` expression. If strategy is manual, this field ignored."
        }
      },
      "required": [
        "name",
        "strategy"
      ]
    },
    "PolicyIAM": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "example": "bigquery",
          "description": "Identity manager type. Supported types are http and frontier",
          "required": [
            "provider"
          ]
        },
        "config": {
          "type": "object",
          "description": "Client configuration according to the provider type",
          "required": [
            "config"
          ]
        },
        "schema": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User (appeal creator) profile details schema to be shown in the creator field in an appeal"
        }
      },
      "required": [
        "provider",
        "config"
      ]
    },
    "PolicyRequirement": {
      "type": "object",
      "properties": {
        "on": {
          "$ref": "#/definitions/RequirementRequirementTrigger",
          "description": "Requirement trigger. If the trigger is matched, the requirement will be evaluated"
        },
        "appeals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequirementAdditionalAppeal"
          }
        }
      }
    },
    "ProviderConfigAppealConfig": {
      "type": "object",
      "properties": {
        "allowPermanentAccess": {
          "type": "boolean"
        },
        "allowActiveAccessExtensionIn": {
          "type": "string"
        }
      }
    },
    "ProviderConfigProviderParameter": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ProviderConfigResourceConfig": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "policy": {
          "$ref": "#/definitions/v1beta1PolicyConfig"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Role"
          }
        },
        "filter": {
          "type": "string"
        }
      }
    },
    "RequirementAdditionalAppeal": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/AdditionalAppealResourceIdentifier"
        },
        "role": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/v1beta1AppealOptions"
        },
        "policy": {
          "$ref": "#/definitions/v1beta1PolicyConfig"
        }
      }
    },
    "RequirementRequirementTrigger": {
      "type": "object",
      "properties": {
        "providerType": {
          "type": "string",
          "description": "Criteria for the provider type of the current appeal's selected resource. Regex supported"
        },
        "providerUrn": {
          "type": "string",
          "description": "Criteria for the provider URN of the current appeal's selected resource. Regex supported"
        },
        "resourceType": {
          "type": "string",
          "description": "Criteria for the resource type of the current appeal's selected resource. Regex supported"
        },
        "resourceUrn": {
          "type": "string",
          "description": "Criteria for the resource URN of the current appeal's selected resource. Regex supported"
        },
        "role": {
          "type": "string",
          "description": "Criteria for the role of the current appeal. Regex supported"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Condition"
          }
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "UpdateApprovalRequestAction": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "example": "approve",
          "description": "Action to take on the approval. Possible values are \"approve\" or \"reject\""
        },
        "reason": {
          "type": "string",
          "description": "In case an appeal is rejected, the reason is to be updated in this field"
        }
      }
    },
    "guardianv1beta1Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f4b7a3c0-9f9b-4b9b-9b0a-9e4b1a1b1b1b",
          "description": "Resource unique identifier"
        },
        "providerType": {
          "type": "string",
          "example": "bigquery",
          "description": "Type of the provider that manages this resource"
        },
        "providerUrn": {
          "type": "string",
          "example": "my-bq",
          "description": "Unique resource urn"
        },
        "type": {
          "type": "string",
          "example": "table",
          "description": "Type of the resource. Depends on the provider type. For example, for BigQuery, it can be dataset, table, view, etc."
        },
        "urn": {
          "type": "string",
          "description": "Unique resource urn"
        },
        "name": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "description": "Additional information of the resource that can be updated from Guardian"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-07T05:39:56.961Z",
          "description": "Resource creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-07T05:39:56.961Z",
          "description": "Resource last update timestamp"
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Whether the resource is deleted or not"
        },
        "parentId": {
          "type": "string",
          "description": "Parent resource id"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guardianv1beta1Resource"
          },
          "description": "List of child resources"
        }
      },
      "title": "Resource contains information of resource from providers"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1AddApproverRequest": {
      "type": "object",
      "properties": {
        "appealId": {
          "type": "string",
          "example": "f1b9a9a0-1f0b-4b7a-8b0a-9b0a9b0a9b0a",
          "description": "UUID of the appeal",
          "required": [
            "appeal_id"
          ]
        },
        "approvalId": {
          "type": "string",
          "example": "f1b9a9a0-1f0b-4b7a-8b0a-9b0a9b0a9b0a",
          "description": "Unique identifier or name of the approval",
          "required": [
            "approval_id"
          ]
        },
        "email": {
          "type": "string",
          "example": "john@raystack.org",
          "description": "Email of the approver",
          "required": [
            "email"
          ]
        }
      },
      "required": [
        "appealId",
        "approvalId",
        "email"
      ]
    },
    "v1beta1AddApproverResponse": {
      "type": "object",
      "properties": {
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        }
      }
    },
    "v1beta1Appeal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyVersion": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/v1beta1AppealOptions"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resource": {
          "$ref": "#/definitions/guardianv1beta1Resource"
        },
        "approvals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Approval"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Creation time of the appeal"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Last update time of the appeal"
        },
        "details": {
          "type": "object"
        },
        "accountType": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creator": {
          "type": "object"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grant": {
          "$ref": "#/definitions/v1beta1Grant"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "Appeal is created by user to get access to one or more resources"
    },
    "v1beta1AppealOptions": {
      "type": "object",
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "v1beta1Approval": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "appealId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "actor": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyVersion": {
          "type": "integer",
          "format": "int64"
        },
        "approvers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-07T05:39:56.961Z",
          "description": "Approval creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-07T05:39:56.961Z",
          "description": "Approval last update timestamp"
        },
        "reason": {
          "type": "string"
        }
      },
      "title": "Approval is an approval item that generated in an appeal based on the selected policy"
    },
    "v1beta1CancelAppealResponse": {
      "type": "object",
      "properties": {
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        }
      }
    },
    "v1beta1Condition": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/ConditionMatchCondition"
        }
      }
    },
    "v1beta1CreateAppealRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account ID of the user or service account who is creating the appeal"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1CreateAppealRequestResource"
          },
          "description": "List of resources that the user is requesting access to"
        },
        "accountType": {
          "type": "string",
          "description": "Account type of the user or service account who is creating the appeal. For example for BigQuery and Google Cloud IAM values are \"user\" or \"service_account\""
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1beta1CreateAppealRequestResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "options": {
          "type": "object"
        },
        "details": {
          "type": "object"
        }
      }
    },
    "v1beta1CreateAppealResponse": {
      "type": "object",
      "properties": {
        "appeals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Appeal"
          }
        }
      }
    },
    "v1beta1CreateNamespaceRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1beta1Namespace"
        }
      }
    },
    "v1beta1CreateNamespaceResponse": {
      "type": "object"
    },
    "v1beta1CreatePolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1beta1Policy"
        }
      }
    },
    "v1beta1CreateProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1beta1Provider"
        }
      }
    },
    "v1beta1DeleteApproverResponse": {
      "type": "object",
      "properties": {
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        }
      }
    },
    "v1beta1DeleteProviderResponse": {
      "type": "object"
    },
    "v1beta1DeleteResourceResponse": {
      "type": "object"
    },
    "v1beta1GetActivityResponse": {
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "#/definitions/v1beta1ProviderActivity"
        }
      }
    },
    "v1beta1GetAppealResponse": {
      "type": "object",
      "properties": {
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        }
      }
    },
    "v1beta1GetGrantResponse": {
      "type": "object",
      "properties": {
        "grant": {
          "$ref": "#/definitions/v1beta1Grant"
        }
      }
    },
    "v1beta1GetNamespaceResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1beta1Namespace"
        }
      }
    },
    "v1beta1GetPolicyPreferencesResponse": {
      "type": "object",
      "properties": {
        "appeal": {
          "$ref": "#/definitions/v1beta1PolicyAppealConfig"
        }
      }
    },
    "v1beta1GetPolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1beta1Policy"
        }
      }
    },
    "v1beta1GetProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1beta1Provider"
        }
      }
    },
    "v1beta1GetProviderTypesResponse": {
      "type": "object",
      "properties": {
        "providerTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ProviderType"
          }
        }
      }
    },
    "v1beta1GetResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/guardianv1beta1Resource"
        }
      }
    },
    "v1beta1Grant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time"
        },
        "appealId": {
          "type": "string"
        },
        "revokedBy": {
          "type": "string"
        },
        "revokedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Timestamp when the grant is revoked"
        },
        "revokeReason": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Creation time of the grant"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Last update time of the grant"
        },
        "resource": {
          "$ref": "#/definitions/guardianv1beta1Resource"
        },
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        },
        "isPermanent": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "statusInProvider": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "v1beta1ImportActivitiesRequest": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timestampGte": {
          "type": "string",
          "format": "date-time"
        },
        "timestampLte": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1ImportActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ProviderActivity"
          }
        }
      }
    },
    "v1beta1ImportGrantsFromProviderRequest": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string"
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceUrns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1ImportGrantsFromProviderResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Grant"
          }
        }
      }
    },
    "v1beta1ListActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ProviderActivity"
          }
        }
      }
    },
    "v1beta1ListAppealsResponse": {
      "type": "object",
      "properties": {
        "appeals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Appeal"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1ListApprovalsResponse": {
      "type": "object",
      "properties": {
        "approvals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Approval"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1ListGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Grant"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Namespace"
          }
        }
      }
    },
    "v1beta1ListPoliciesResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Policy"
          }
        }
      }
    },
    "v1beta1ListProvidersResponse": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Provider"
          }
        }
      }
    },
    "v1beta1ListResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guardianv1beta1Resource"
          }
        }
      }
    },
    "v1beta1ListRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Role"
          }
        }
      }
    },
    "v1beta1ListUserAppealsResponse": {
      "type": "object",
      "properties": {
        "appeals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Appeal"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1ListUserApprovalsResponse": {
      "type": "object",
      "properties": {
        "approvals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Approval"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1ListUserGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Grant"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1Namespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Creation time of the namespace"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Last update time of the namespace"
        }
      }
    },
    "v1beta1Policy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f4b7a3c0-9f9b-4b9b-9b0a-9e4b1a1b1b1b",
          "description": "Policy unique identifier"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Policy version. Auto-incremented when policy is updated"
        },
        "description": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyApprovalStep"
          },
          "description": "Sequence of approval steps. Each step can have different approval strategy and approvers",
          "title": "add description"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-07T05:39:56.961Z",
          "description": "Policy creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-07T05:39:56.961Z",
          "description": "Policy last update timestamp"
        },
        "requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyRequirement"
          }
        },
        "iam": {
          "$ref": "#/definitions/PolicyIAM"
        },
        "appeal": {
          "$ref": "#/definitions/v1beta1PolicyAppealConfig"
        },
        "title": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      },
      "title": "Policy is a configurable steps for appeal's approval"
    },
    "v1beta1PolicyAppealConfig": {
      "type": "object",
      "properties": {
        "durationOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAppealConfigDurationOptions"
          },
          "description": "List of duration options"
        },
        "allowOnBehalf": {
          "type": "boolean"
        },
        "allowPermanentAccess": {
          "type": "boolean",
          "description": "Set this to true if you want to allow users to have permanent access to the resources. Default is false"
        },
        "allowActiveAccessExtensionIn": {
          "type": "string",
          "description": "Duration before the access expiration date when the user allowed to create appeal to the same resource (extend their current access). Valid time units are ns, us (or µs), ms, s, m, h"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAppealConfigQuestion"
          },
          "description": "List of questions to be asked to the appeal creator"
        },
        "allowCreatorDetailsFailure": {
          "type": "boolean"
        }
      }
    },
    "v1beta1PolicyConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1beta1Provider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "urn": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/v1beta1ProviderConfig"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Creation time of the provider"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Last update time of the provider"
        }
      },
      "title": "Provider contains information about external data provider such as BigQuery, Metabase, etc., credentials, policy, and allowed roles"
    },
    "v1beta1ProviderActivity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "authorizations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z",
          "description": "Creation time of the provider activity"
        },
        "provider": {
          "$ref": "#/definitions/v1beta1Provider"
        },
        "resource": {
          "$ref": "#/definitions/guardianv1beta1Resource"
        },
        "providerActivityId": {
          "type": "string"
        },
        "relatedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1ProviderConfig": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "urn": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "credentials": {
          "type": "object"
        },
        "appeal": {
          "$ref": "#/definitions/ProviderConfigAppealConfig"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderConfigResourceConfig"
          }
        },
        "allowedAccountTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderConfigProviderParameter"
          }
        }
      }
    },
    "v1beta1ProviderType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1RevokeGrantRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "v1beta1RevokeGrantResponse": {
      "type": "object",
      "properties": {
        "grant": {
          "$ref": "#/definitions/v1beta1Grant"
        }
      }
    },
    "v1beta1RevokeGrantsRequest": {
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerUrns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceUrns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "v1beta1RevokeGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Grant"
          }
        }
      }
    },
    "v1beta1Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "v1beta1UpdateApprovalResponse": {
      "type": "object",
      "properties": {
        "appeal": {
          "$ref": "#/definitions/v1beta1Appeal"
        }
      }
    },
    "v1beta1UpdateGrantRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "v1beta1UpdateGrantResponse": {
      "type": "object",
      "properties": {
        "grant": {
          "$ref": "#/definitions/v1beta1Grant"
        }
      }
    },
    "v1beta1UpdateNamespaceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/v1beta1Namespace"
        }
      }
    },
    "v1beta1UpdateNamespaceResponse": {
      "type": "object"
    },
    "v1beta1UpdatePolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1beta1Policy"
        }
      }
    },
    "v1beta1UpdateProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1beta1Provider"
        }
      }
    },
    "v1beta1UpdateResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/guardianv1beta1Resource"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "Email address of the user",
      "name": "X-Auth-Email",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}
